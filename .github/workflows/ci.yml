name: CI Pipeline

on:
  workflow_dispatch: # Allows you to manually trigger the workflow and input the version
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: npm install
      
      - name: Run Lint
        run: npm run lint
      
      - name: Run Unit Tests
        run: npm run test
      
      - name: Build Docker image
        run: |
          VERSION=${{ github.event.inputs.version || 'latest' }}
          echo "Building Docker image with version $VERSION..."
          ./gradlew -Pprod clean bootJar
          ./gradlew -Pprod bootJar jibDockerBuild

      - name: Check if Docker image exists
        run: |
          IMAGE_NAME="ecommmm"
          if [[ "$(docker images -q $IMAGE_NAME 2> /dev/null)" == "" ]]; then
              echo "Error: Local Docker image '$IMAGE_NAME' not found."
              exit 1
          fi

      - name: Tag Docker image with version and latest
        run: |
          VERSION=${{ github.event.inputs.version || 'latest' }}
          IMAGE_NAME="ecommmm"
          DOCKER_HUB_REPO="romainmiras/ecommmm"
          echo "Tagging Docker image with version $VERSION and latest..."
          docker tag $IMAGE_NAME $DOCKER_HUB_REPO:$VERSION
          docker tag $IMAGE_NAME $DOCKER_HUB_REPO:latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          VERSION=${{ github.event.inputs.version || 'latest' }}
          DOCKER_HUB_REPO="romainmiras/ecommmm"
          echo "Pushing Docker image to Docker Hub..."
          docker push $DOCKER_HUB_REPO:$VERSION
          docker push $DOCKER_HUB_REPO:latest

      - name: Deploy with Terraform
        run: |
          VERSION=${{ github.event.inputs.version || 'latest' }}
          echo "Starting deployment with Terraform using version $VERSION..."
          terraform init
          terraform apply -var="image_version=$VERSION" -auto-approve
