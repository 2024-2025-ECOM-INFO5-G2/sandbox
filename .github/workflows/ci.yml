name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint

      - name: Run Frontend Unit Tests
        run: npm run test

  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install backend dependencies
        run: ./gradlew clean build

      - name: Run Backend Tests
        run: ./gradlew test

      
      # Frontend tests section
      # - name: Run Unit Tests
      #   run: npm run test
      
      # Backend tests section 
      # - name: Install backend dependencies
      #   run: ./gradlew clean build

      # - name: Run backend tests
      #   run: ./gradlew test

      # Build and push Docker image
      # - name: Build Docker image
      #   run: |
      #     echo "Building Docker image with the 'latest' tag..."
      #     ./gradlew -Pprod clean bootJar
      #     ./gradlew -Pprod bootJar jibDockerBuild

      # - name: Check if Docker image exists
      #   run: |
      #     IMAGE_NAME="ecommmm"
      #     if [[ "$(docker images -q $IMAGE_NAME 2> /dev/null)" == "" ]]; then
      #         echo "Error: Local Docker image '$IMAGE_NAME' not found."
      #         exit 1
      #     fi

      # - name: Tag Docker image as 'latest'
      #   run: |
      #     IMAGE_NAME="ecommmm"
      #     DOCKER_HUB_REPO="romainmiras/ecommmm"
      #     echo "Tagging Docker image as 'latest'..."
      #     docker tag $IMAGE_NAME $DOCKER_HUB_REPO:latest

      # - name: Push Docker image to Docker Hub
      #   run: |
      #     DOCKER_HUB_REPO="romainmiras/ecommmm"
      #     echo "Pushing Docker image to Docker Hub..."
      #     docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
      #     docker push $DOCKER_HUB_REPO:latest

      
